#!/usr/bin/perl -w
##
# NAME:
# diffilter.pl
#
# PURPOSE:
# To find MM2 files containing certain parameters (e.g. Cryospheric
# parameters). Files fulfilling the filter requirements are copied to a
# new directory and prepared for ingestion in the catalogue.
#
# REQUIREMENTS:
# NA
#
# INPUT:
# NA
#
# OUTPUT:
# NA
#
# NOTES:
# NA
#
# BUGS:
# NA
#
# AUTHOR:
# Øystein Godøy, METNO/FOU, 2013-07-03 
#
# MODIFIED:
# Øystein Godøy, METNO/FOU, 2014-04-01: Added filtering on latitude for
# SAON purposes.
# Øystein Godøy, METNO/FOU, 2014-11-20: Changed latitude check to bounding
# box check.
#

use strict;
use warnings;
use Getopt::Std;
use XML::LibXML;
use File::Copy;
use Scalar::Util qw(looks_like_number);

sub usage;

use vars qw($opt_i $opt_o $opt_p $opt_b);

usage unless getopts("i:o:p:b:");
usage unless ($opt_i && $opt_o);

# Define search phrase for keywords
my $searchpar;
if ($opt_p) {
    $searchpar = $opt_p;
}

# Check that destination exists
unless (-d $opt_o) {
    mkdir $opt_o or die "Could not create destination directory $opt_o\n";
}

# Get filenames to loop through
opendir my $dh, $opt_i or die "Could not open $opt_i\n";
my @dc = readdir $dh;
closedir $dh;

# Loop through files and search for science keywords, copy files
# fulfilling requirements to new directory
my $parser = new XML::LibXML;
my($mm2doc,@kw,@spb,$mystring,$kwmatch,$latmatch);
my $xpath = XML::LibXML::XPathContext->new();
$xpath->registerNs('mm2', 'http://www.met.no/schema/metamod/MM2');
foreach my $item (@dc) {
    next unless ($item =~ /\.xml$/);
    print "$item\n";
    $kwmatch = $latmatch = 0;
    $mm2doc = $parser->parse_file($opt_i."/".$item);
    if ($opt_p) {
        #@kw = $xpath->findnodes("/*[\@name='variable']", $mm2doc);
        @kw = $xpath->findnodes("/mm2:MM2/mm2:metadata[\@name='variable']", $mm2doc);
        print "\tFound ". scalar @kw." keyword sequences in this file.\n";
        foreach my $reqnode (@kw) {
            print "\t".$reqnode->textContent()."\n";
            my $gcmdkw = $reqnode->textContent();
            if ($gcmdkw =~ m/^$searchpar/i) {
                $kwmatch++;
                print "\n\t$item contains Cryospheric data...\n";
                last;
            }
        }
    }
    if ($opt_p && $kwmatch) {
        copy($opt_i."/".$item,$opt_o."/".$item) or 
        warn("Could not copy $item from $opt_i to $opt_o\n");
        $item =~ s/\.xml$/\.xmd/;
        copy($opt_i."/".$item,$opt_o."/".$item) or 
        warn("Could not copy $item from $opt_i to $opt_o\n");
    }
}

exit(0);

###########################################################

sub usage {

    print "$0 -i <idir> -o <odir> -p <parameters>\n";
    print "\t<idir>: input dir\n";
    print "\t<odir>: output dir\n";
    print "\t<parameters>: GCMD science keywords topic to search for\n";
    print "\n";

    exit(0);
}

