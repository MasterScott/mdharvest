#!/usr/bin/perl -w
##
# NAME:
# transformxml.pl
#
# PURPOSE:
# To find XML files in a directory and transform these using XSLT to a
# nother XML format. Typically this is used to transform DIF to MM2 or
# similar.
#
# REQUIREMENTS:
# NA
#
# INPUT:
# NA
#
# OUTPUT:
# NA
#
# NOTES:
# NA
#
# BUGS:
# NA
#
# AUTHOR:
# Øystein Godøy, METNO/FOU, 2013-07-04 
#
# MODIFIED:
# NA
#
# CVS_ID:
# $Id: $
#

use strict;
use warnings;
use Getopt::Std;
use XML::LibXML;
use XML::LibXSLT;
use File::Copy;

sub usage;

use vars qw($opt_i $opt_o $opt_s);

usage unless getopts("i:o:s:");
usage unless ($opt_i && $opt_o && $opt_s);

# Define stylesheet
die "Can't find $opt_s\n" unless (-e $opt_s);
my $xslt = XML::LibXSLT->new();
my $styledoc = XML::LibXML->load_xml(location=>$opt_s, no_cdata=>1);
my $stylesheet = $xslt->parse_stylesheet($styledoc);

# Check that destination exists
unless (-d $opt_o) {
    mkdir $opt_o or die "Could not create destination directory $opt_o\n";
}

# Get filenames to loop through
opendir my $dh, $opt_i or die "Could not open $opt_i\n";
my @dc = readdir $dh;
closedir $dh;

# Loop through files and search for science keywords, copy files
# fulfilling requirements to new directory
my $parser = new XML::LibXML;
my($difdoc,@kw,$mystring);
foreach my $item (@dc) {
    next unless ($item =~ /\.xml$/);
    my $sourcedoc = XML::LibXML->load_xml(location => $opt_i."/".$item);
    print "$item\n";
    $item =~ s/_dif//;
    print "$item\n";

    my $transformeddoc = $stylesheet->transform($sourcedoc);
    $stylesheet->output_file($transformeddoc,$opt_o."/".$item);
}

exit(0);

###########################################################

sub usage {

    print "$0 -i <idir> -o <odir> -s <stylesheet>\n";
    print "\t<idir>: input dir\n";
    print "\t<odir>: output dir\n";
    print "\t<stylesheet>: XSLT stylesheet to use\n";
    print "\n";

    exit(0);
}

